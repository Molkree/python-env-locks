[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "python-env-locks"
description = "Testing environment locks for Python projects"
authors = [{ name = "Dmitry Volodin", email = "mr.molkree@gmail.com" }]
requires-python = ">= 3.13"
dependencies = [
    "numpy==2.2.6",
    "pandas==2.2.3",
    "plotly==6.1.1",
    "python-dotenv==1.1.0",
    "streamlit==1.46.0",
]
version = "0.0.1"

[project.optional-dependencies]
dev = [
    "black",
    "flake8",
    "isort",
    "mypy",
    "pandas-stubs",
    "pep8-naming",
    "pre-commit",
    "types-SQLAlchemy",
    "uv",
]

[tool.pyright]
exclude = ["build", ".venv"]

[tool.mypy]
mypy_path = ["src"]

[[tool.mypy.overrides]]
module = ["plotly.*"]
follow_untyped_imports = true

[tool.setuptools]
package-dir = { "" = "src" }


[tool.setuptools.packages.find]
where = ["src"]

[tool.semantic_release]
assets = []
commit_message = "chore: bump release to {version}\n\n[skip ci] Automatically generated by python-semantic-release"
logging_use_named_masks = false
major_on_zero = false
tag_format = "v{version}"
version_toml = [
    "definition.toml:project.release:tf", # Tag format
]

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
exclude_commit_patterns = [".*skip ci.*"]

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"

[tool.semantic_release.commit_parser_options]
allowed_tags = [
    "build",
    "chore",
    "ci",
    "docs",
    "feat",
    "fix",
    "perf",
    "style",
    "refactor",
    "test",
]
minor_tags = ["feat"]
patch_tags = ["build", "ci", "fix", "perf"]

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
